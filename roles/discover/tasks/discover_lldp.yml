---

- name: Copy lldp.py modified plugin
  copy:
    src: /opt/ecopoiesis-utility/roles/discover/files/lldp.py
    dest: /usr/local/lib/python2.7/dist-packages/ansible/modules/extras/network/lldp.py
    force: yes
    remote_src: true

- name: Copy lldpd.conf to etc
  copy:
   src: /opt/ecopoiesis-utility/roles/discover/files/lldpd.conf
   dest: /etc/lldpd.conf
   force: yes
   remote_src: true
- name: Ensure LLDP started
  service:
    name: lldpd
    state: started

- name: Pause to receive LLDP packets
  pause:
    seconds: 60

- name: Gather LLDP facts about server
  lldp:

- name: Switch configurations LLDP dump
  debug:
    msg: "{{ lldp[item]['chassis']['name'] }} / {{ lldp[item]['port']['ifname'] }}"
  with_items: "{{ lldp.keys() }}"

- name: Check if server exists in Craton using LLDP
  uri:
    url: "{{ ansible_cmdline.craton_url }}/hosts?details=all&vars=lldp.*.chassis.name:\"{{ lldp[item]['chassis']['name'] }}\",lldp.*.port.ifname:\"{{ lldp[item]['port']['ifname'] }}\""
    method: GET
    return_content: yes
    headers:
      X-Auth-User: "{{ ansible_cmdline.craton_username }}"
      X-Auth-Token: "{{ ansible_cmdline.craton_password }}"
      X-Auth-Project: "{{ ansible_cmdline.craton_project }}"
  register: lldp_lookup
  with_items: "{{ lldp.keys() }}"

- name: set host_id to craton server id
  set_fact:
     host_id: "{{ item.json.hosts.0.id }}"
  when:
    - item.json.hosts.0.id is defined
  with_items: "{{ lldp_lookup.results }}"
  ignore_errors: true
