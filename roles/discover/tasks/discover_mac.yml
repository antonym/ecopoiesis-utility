---

- name: Check if server exists in Craton using MAC Addresses
  uri:
    url: '{{ ansible_cmdline.craton_url }}/hosts?details=all&vars=macs[*]:"{{ item }}"'
    method: GET
    return_content: yes
    headers:
      X-Auth-User: "{{ ansible_cmdline.craton_username }}"
      X-Auth-Token: "{{ ansible_cmdline.craton_password }}"
      X-Auth-Project: "{{ ansible_cmdline.craton_project }}"
  register: mac_lookup
  with_items:
    - "{{ hardware_macs }}"

- name: set host_id to craton server id
  set_fact:
     host_id: "{{ item.json.hosts.0.id }}"
  when:
    - item.json.hosts.0.id is defined
  with_items: "{{ mac_lookup.results }}"
  ignore_errors: true

- debug:
    msg: "Server identified as Host ID: {{ host_id }}"
  when:
    - host_id is defined
