---

- name: Run get_macs module to get list of all macs on server
  get_macs: get_facts=yes

- name: Check if server exists in Craton
  uri:
#    url: "{{ ansible_cmdline.craton_url }}/hosts?details=all&vars=macs:{{ mac_test }}"
#    url: "{{ ansible_cmdline.craton_url }}/hosts?details=all&vars=macs:{{ item }}"
    url: "{{ ansible_cmdline.craton_url }}/hosts?details=all&vars=macs[*]:{{ item }}"
    method: GET
    return_content: yes
    headers:
      X-Auth-User: "{{ ansible_cmdline.craton_username }}"
      X-Auth-Token: "{{ ansible_cmdline.craton_password }}"
      X-Auth-Project: "{{ ansible_cmdline.craton_project }}"
  register: mac_lookup
  with_items:
    - "{{ hardware_macs }}"

- name: set host_id to craton server id
  set_fact:
#    host_id: "{{ mac_lookup.json.hosts.0.id }}"
     host_id: "{{ mac_lookup.results.0.json.hosts.0.id }}"
  when:
#    - mac_lookup.json.hosts.0.id is defined
    - mac_lookup.results.0.json.hosts.0.id
- include: discover.yml
  when:
#    - mac_lookup.json.hosts.0.id is not defined
    - mac_lookup.results.0.json.hosts.0.id is not defined
